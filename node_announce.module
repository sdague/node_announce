<?php

/**
 * @file
 *
 * This module allows admins to set recurrent announcements for nodes to send
 * to specified email addresses.
 */

/**
 * Implentation of hook_menu()
 */
function node_announce_menu() {
  $items = array();
  $items['admin/settings/node_announce'] = array(
    'title' => t('Node Announcements'),
    'description' => t('Configure node announcements'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/settings/node_announce/list'] = array(
    'title' => t('Node Announcement List'),
    'description' => t('Change settings for the Node Announcements'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('node_announce_form_list'),
    'access arguments' => array('administer node announcements'),
    'type' =>MENU_LOCAL_TASK,
    'file' => 'node_announce.admin.inc',
  );
  $items['admin/settings/node_announce/add'] = array(
    'title' => t('Add Node Announcement'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('node_announce_form_add'),
    'access arguments' => array('administer node announcements'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'node_announce.admin.inc',
  );
  return $items;
}


/**
 * Implementation of hook_perm()
 */
function node_announce_perm() {
  return array('administer node announcements');
}

/**
 * Implementation of hook_nodeapi()
 */
function node_announce_nodeapi(&$node, $op, $a3, $a4) {
  switch($op) {
    case 'delete':
      node_announce_delete_records($node->nid);
      break;
      // TODO: should we indicate that announcements will be sent out to admins?
  }
}


/**
 *  Implementation of hook_cron().
 *
 *  Go through all the announcements and set
 */
function node_announce_cron() {
  node_announce_process();
}